#!/bin/bash
# -*- ENCODING: UTF-8 -*-
source /usr/share/idiomind/ifs/c.conf
LOG=$DC/addons/stats/.log
NUM=$DC/addons/stats/.num
TPS=$DC/addons/stats/.tps
WKRT=$DC/addons/stats/.wkrt
WKRT2=$DC/addons/stats/.wkrt2
WKRT3=$DC/addons/stats/.wkrt3
W9=$DC/addons/practice/w9
W6=$DC/addons/practice/w6
udt=$(cat "$DC/addons/stats/.udt")
[ ! -d "$DC/addons/stats" ] && mkdir "$DC/addons/stats"

if [ "$1" = A ]; then # recopida informacion para despues mostrarla en el reporte ( si esta activa) 
	#[[ "$(date +%F)" = "$udt" ]] && exit 1

	du -b -h $DM | tail -1 | awk '{print ($1)}' > $DC/addons/stats/.sz
	echo "$tpc" > $DC/addons/stats/.tpc
	echo $(sed -n 2p $DC_s/topic.id) >> $DC/addons/stats/.tpc
	echo $(cat $DC_s/topic_m) >> $DC/addons/stats/.tpc
	
	#2 TOPICS MAS ACTIVOS 
	#-------------------
	
	TPCS=$(cat "$LOG" | grep -o -P '(?<=tpcs.).*(?=.tpcs)' \
	| sort | uniq -dc | sort -n -r | head -3 | sed -e 's/^ *//' -e 's/ *$//')
	
	tpc1=$(echo "$TPCS" | sed -n 1p | cut -d " " -f2-)
	echo "$tpc1" > "$TPS"
	
	if [[ "$(echo "$TPCS" | sed -n 2p | awk '{print ($1)}')" -ge 3 ]]; then
		tpc2=$(echo "$TPCS" | sed -n 2p | cut -d " " -f2-)
		echo "$tpc2" >> "$TPS"
	fi
	
	if [[ "$(echo "$TPCS" | sed -n 3p | awk '{print ($1)}')" -ge 3 ]]; then
		tpc3=$(echo "$TPCS" | sed -n 3p | cut -d " " -f2-)
		echo "$tpc3" >> "$TPS"
	fi
	
	#DEDICACION // 100 
	#-------------------
	
	#palabras editadas o tratadas para añadir  informacion // 20
	EITM=$(cat "$LOG" \
	| grep -o -P '(?<=eitm.).*(?=.eitm)' | wc -l)
	#echo "$EITM" >> "$NUM" 
	
	#imagenes agregadas a los items // 20
	AIMG=$(cat "$LOG" \
	| grep -o -P '(?<=aimg.).*(?=.aimg)' | wc -l)
	#echo "$AIMG" >> "$NUM"
	
	#items marcados para repasar // 20 
	REIM=$(cat "$LOG" \
	| grep -o -P '(?<=reim.).*(?=.reim)' | tr '\n' '+')
	#echo "$REIM""0" | bc -l >> "$NUM"
	REIM=$(echo "$REIM""0" | bc -l)
	
	#total de items agregados // 50
	AITM=$(cat "$LOG" \
	| grep -o -P '(?<=aitm.).*(?=.aitm)' | tr '\n' '+')
	echo "$AITM""0" | bc -l > "$NUM" # 1 line 
	AITM=$(echo "$AITM""0" | bc -l)
	
	DDC=$(echo "$EITM $AIMG $REIM $AITM" | tr ' ' '+' | bc -l)
	
	#LOGROS // 100
	#-------------------
	#items que podrian marcarse como apendidos ( practica) // 20
	tpc1=$(sed -n 1p $TPS) #topics mas activos
	tpc2=$(sed -n 2p $TPS)
	tpc3=$(sed -n 3p $TPS)
	tok1="$DC_tl/$tpc1/.tok-inx"
	tok2="$DC_tl/$tpc2/.tok-inx"
	tok3="$DC_tl/$tpc3/.tok-inx"
	
	W9INX=$(cat $W9 | sort | uniq -dc | sort -n -r | sed 's/ \+/ /g')
	
	n=1
	while [ $n -le 15 ]; do
		if [[ $(echo "$W9INX" | sed -n "$n"p | awk '{print ($1)}') -ge 3 ]]; then
			fwk=$(echo "$W9INX" | sed -n "$n"p | awk '{print ($2)}')
			
			if ! cat "$tok1" | grep -o "$fwk"; then
				echo "$fwk" >> $DC/addons/stats/w9
				
			elif ! cat "$tok2" | grep -o "$fwk"; then
				echo "$fwk" >> $DC/addons/stats/w9
				
			elif ! cat "$tok3" | grep -o "$fwk"; then
				echo "$fwk" >> $DC/addons/stats/w9
			fi
		fi
		
		let n++
	done
	sed -i '/^$/d' $DC/addons/stats/w9
	
	CTW9=$(cat $DC/addons/stats/w9 | wc -l)
	echo "$CTW9" >> "$NUM" # 2 line
	
	#items marcados como aprendidos // 80
	OKIM=$(cat "$LOG" \
	| grep -o -P '(?<=okim.).*(?=.okim)' | tr '\n' '+')
	echo "$OKIM""0" | bc -l >> "$NUM" # 3 line
	OKIM=$(echo "$OKIM""0" | bc -l)

	#Buscando valor de logros
	ARCH=$(echo "$CTW9 $OKIM" | tr ' ' '+' | bc -l)
	
	#STUDY // 100
	#-------------------
	
	#veces que se uso el visor para estudiar // 30
	VWR=$(cat "$LOG" \
	| grep -o -P '(?<=vwr.).*(?=.vwr)' | tr '\n' '+')
	echo "$VWR""0" | bc -l >> "$NUM"
	VWR=$(echo "$VWR""0" | bc -l)
	
	#veces que se uso el learn de practica // 20 
	LRNPR=$(cat "$LOG" \
	| grep -o -P '(?<=lrnpr.).*(?=.lrnpr)' | wc -l)
	echo "$LRNPR">> "$NUM"
	
	#veces que se practico // 50
	PRCTC=$(cat "$LOG" \
	| grep -o -P '(?<=prctc.).*(?=.prctc)' | wc -l)
	echo "$PRCTC">> "$NUM"
	
	STDY=$(echo "$VWR $LRNPR $PRCTC" | tr ' ' '+' | bc -l)
	
	#Plabras dificiles
	#-------------------
	if [[ -n "$(cat $DC/addons/stats/w6)" ]]; then
	
		W6INX=$(cat $W6 | sort | uniq -dc | sort -n -r | sed 's/ \+/ /g')
		
		n=1
		while [ $n -le 10 ]; do
		
			if [[ $(echo "$W6INX" | sed -n "$n"p | awk '{print ($1)}') -ge 3 ]]; then
			
				fwk=$(echo "$W6INX" | sed -n "$n"p | awk '{print ($2)}')
				echo "$fwk" >> $DC/addons/stats/w6
			fi
			
			let n++
		done
		
		sed -i '/^$/d' $DC/addons/stats/w6
		W6IN=$(echo "$W6INX" | wc -l)
		
	fi
	
	#Operaciones de porcent 
	#-------------------
	
	[[ $DDC -ge 100 ]] && DDC=100
	[[ $STDY -ge 100 ]] && STDY=100
	[[ $ARCH -ge 100 ]] && ARCH=100
	ttl=$(($DDC+$ARCH+$STDY))
	real=$(($ttl/3))
	acrm=$((100-$real))
	lfD=$((110-$DDC))
	lfS=$((110-$STDY))
	lfL=$((80-$ARCH))
	flD=$(($DDC*$real/$ttl))
	flS=$(($STDY*$real/$ttl))
	flL=$(($ARCH*$real/$ttl))
	
	rm "$LOG"
	
	ext1=$(n=1
	while [ $n -le $flD ]; do printf " ";
		let n++
	done)
	ext2=$(n=1
	while [ $n -le $flS ]; do printf " ";
		let n++
	done)
	ext3=$(n=1
	while [ $n -le $flL ]; do printf " ";
		let n++
	done)
	ext4=$(n=1
	while [ $n -le $acrm ]; do printf " ";
		let n++
	done)
		
	if [[ "$(echo "$tpc1" | wc -c)" -gt 40 ]]; then
		tle1="${tpc1:0:37}..."
	else
		tle1="$tpc1"
	fi
	if [[ "$(echo "$tpc2" | wc -c)" -gt 40 ]]; then
		tle2="${tpc2:0:37}..."
	else
		tle2="$tpc2"
	fi
	if [[ "$(echo "$tpc3" | wc -c)" -gt 40 ]]; then
		tle3="${tpc3:0:37}..."
	else
		tle3="$tpc3"
	fi
	
	echo "<sub><small>Topic Activo:    $tle1</small></sub>
<sup><small>"$(date "+%B %d")"    </small></sup><small><sup><span background='#F3C879'>$ext1</span><span background='#6E9FD4'>$ext2</span><span background='#76A862'><span color='#FFFFFF'><b>$ext3$real% </b></span><span background='#E8E8E8'>$ext4</span></span></sup></small>" >> $DC/addons/stats/.wks_
	cat $DC/addons/stats/.wks | head -n 20 >> $DC/addons/stats/.wks_
	mv -f $DC/addons/stats/.wks_ $DC/addons/stats/.wks
	echo "<big><big><b>$real%</b></big></big><sup>  Performance</sup>
" > $WKRT
if [ -n "$tpc3" ]; then
	echo "<sup>Topics mas activos:</sup>
<b>$tle1</b>
<b><span color='#5B5656'>$tle2</span></b>
<b><span color='#736C6C'>$tle3</span></b>
">> $WKRT
elif [ -n "$tpc2" ]; then
	echo "<sup>Topics mas activos:</sup>
<b>$tle1</b>
<b><span color='#5B5656'>$tle2</span></b>
">> $WKRT
else
	echo "<sup>Topic mas activo:</sup>
<b>$tle1</b>
">> $WKRT
fi
echo "<big><span font='ultralight'>$CTW9</span></big>  <small>Items que podrian marcarse como aprendidos</small>" >> $WKRT
echo "<big><span font='ultralight'>$OKIM</span></big>  <small>Items marcados como aprendidos</small>" >> $WKRT
echo "
<sup>Comparación:</sup>" >> $WKRT2
cat "$DC/addons/stats/.wks" >> $WKRT2

if [[ -n "$(cat $DC/addons/stats/w6)" ]]; then
	echo "
<sup>Palabras dificiles</sup>" >> $WKRT3
	cat "$DC/addons/stats/w6" >> $WKRT3
fi
echo "
<sup>Tamano Multimedia:</sup>
$(cat $DC/addons/stats/.sz)" >> $WKRT3

echo "$(date +%F)" > "$DC/addons/stats/.udt"
echo "- Weekly Report" > $DC_s/topic_m
echo "$tpc" > $DC_s/topic.id
echo wr >> $DC_s/topic.id

rm -f  $DT/.sz

exit 1

elif [ "$1" = T ]; then
	eht=$(sed -n 3p $DC_s/.rd)
	wth=$(sed -n 4p $DC_s/.rd)
	tpc1=$(sed -n 1p $TPS) #topics mas activos
	tpc2=$(sed -n 2p $TPS)
	tpc3=$(sed -n 3p $TPS) #topics mas activos
	tpcr=$(cat $DC/addons/stats/.tpc)
	bdzs= # tamaño de la base de datos
	cd $DS
	KEY=12359
	
	$yad --form --align=center --scroll \
	--borders=12 --plug=$KEY --tabnum=1 \
	--print-all --text="$(cat $WKRT)" --field="$(cat $WKRT2)":lbl --field="$(cat $WKRT3)":lbl &
	cat $DC/addons/stats/w9 \
	| awk '{print "TRUE\n"$0}' | $yad \
	--list --ellipsize=END --print-all \
	--plug=$KEY --tabnum=2 --always-print-result \
	--column="$(cat $DC/addons/stats/w9 | wc -l)" \
	--column="Items que se pueden marcar como aprendidos" \
	--checklist --class=idiomind --center > $DT/slt &
	$yad --notebook --on-top --name=idiomind --center \
	--class=idiomind --align=right --key=$KEY \
	--tab-borders=0 --center --title="Weekly Report" \
	--tab=" Report   $(date "+%B %d") " --tab=" Probables " \
	--buttons-layout=end --class=idiomind \
	--image-on-top --window-icon=idiomind \
	--width=380 --height=520 --borders=10 \
	--button=Ok:0
		ret=$?
		
		if [[ $ret -eq 0 ]]; then
			rm $WKRT $LOG
			tlng1="$DC_tl/$tpc1/.tlng-inx"
			tlng2="$DC_tl/$tpc2/.tlng-inx"
			tlng3="$DC_tl/$tpc3/.tlng-inx"
			tok1="$DC_tl/$tpc1/.tok-inx"
			tok2="$DC_tl/$tpc2/.tok-inx"
			tok3="$DC_tl/$tpc3/.tok-inx"
		
			if [[ -n "$(cat "$DC/addons/stats/w9")" ]]; then
				list=$(cat "$DT/slt" | sed 's/|//g')
				
				n=1
				while [ $n -le "$(cat "$DT/slt" | wc -l)" ]; do
					chkst=$(echo "$list" |sed -n "$n"p)
					if  echo "$chkst" | grep  "TRUE";  then
						echo "$chkst" | sed 's/TRUE//g'  >> $DT/tmp
					fi
					
					let n++
				done
				
				n=1
				while [ $n -le "$(cat "$DT/tmp" | wc -l)" ]; do
					itm=$(sed -n "$n"p $DT/tmp)
					
					if [ -f "$tlng1" ]; then
						if cat "$tlng1" | grep -o "$itm"; then
							grep -v -x -v "$itm" "$tlng1" > $DT/tlng
							sed '/^$/d' $DT/tlng > "$tlng1"
							echo "$itm" >> "$tok1"
						fi
					fi
						
					if [ -f "$tlng2" ]; then
						if cat "$tlng2" | grep -o "$itm"; then
							grep -v -x -v "$itm" "$tlng2" > $DT/tlng
							sed '/^$/d' $DT/tlng > "$tlng2"
							echo "$itm" >> "$tok2"
						fi
					fi
					
					if [ -f "$tlng3" ]; then
						if cat "$tlng3" | grep -o "$itm"; then
							grep -v -x -v "$itm" "$tlng3" > $DT/tlng
							sed '/^$/d' $DT/tlng > "$tlng3"
							echo "$itm" >> "$tok3"				
						fi
					fi
					
					let n++
				done
			rm $DT/*.x $DC/addons/stats/w9 $DC/addons/stats/w6 $DC/addons/practice/w9 $DC/addons/practice/w6 $DT/tmp $DT/tlng
			
			fi
			echo $(sed -n 1p $DC/addons/stats/.tpc) > $DC_s/topic.id
			echo $(sed -n 2p $DC/addons/stats/.tpc) >> $DC_s/topic.id
			echo $(sed -n 3p $DC/addons/stats/.tpc) > $DC_s/topic_m
			rm -f $DT/slt $DT/*.x
		else
			echo $(sed -n 1p $DC/addons/stats/.tpc) > $DC_s/topic.id
			echo $(sed -n 2p $DC/addons/stats/.tpc) >> $DC_s/topic.id
			echo $(sed -n 3p $DC/addons/stats/.tpc) > $DC_s/topic_m
			rm -f $DT/slt $DT/*.x
		fi
		
elif [ "$1" = C ]; then
	sttng=$(sed -n 1p $DC/addons/stats/cnf)
	
	if [ -z $sttng ]; then
		echo FALSE > $DC/addons/stats/cnf
		sttng=$(sed -n 1p $DC/addons/stats/cnf)
	fi
	
	if [ $sttng = TRUE ]; then
		SW=$(cat $DC/addons/stats/.wks | head -n 8)
	else
		SW=" "
	fi
	
	CNFG=$($yad --title="Weekly Report" --borders=10 --print-all \
	--center --form --on-top --scroll --skip-taskbar --align=center \
	--always-print-result --window-icon=idiomind \
	--button=Close:0 --width=350 --height=250 --fixed \
	--text="<sup>Una vista rápida de los progresos</sup>" \
	--field="Used This:CHK" $sttng \
	--field="$SW:LBL")
		ret=$?
		
		if [ $ret -eq 0 ]; then
			sttng=$(echo "$CNFG" | cut -d "|" -f1)
			sed -i "1s/.*/$sttng/" $DC/addons/stats/cnf
			rm -f $DT/*.r
			exit
		else
			sttng=$(echo "$CNFG" | cut -d "|" -f1)
			sed -i "1s/.*/$sttng/" $DC/addons/stats/cnf
			exit
		fi
fi
