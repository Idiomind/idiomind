#!/bin/bash

# This software is provided for the purpose of reasonable personal use of
# the Google Translate service, i.e., for those who prefer command line to
# web interface. For other purposes, please refer to the official Google
# Translate API <https://developers.google.com/translate/>.
# 
# By using this software, the user are aware that:
# 
# 1. Google Translate is a proprietary service provided and owned by
# Google Inc.
# 
# 2. This script is NOT a Google product. Neither this software nor
# its author is affiliated with Google Inc.
# 
# 3. The software is provided "AS IS", without warranty of any kind,
# express or implied, including but not limited to the warranties of
# merchantability, fitness for a particular purpose and noninfringement. In
# no event shall the authors be liable for any claim, damages or other
# liability, whether in an action of contract, tort or otherwise, arising
# from, out of or in connection with the software or the use or other
# dealings in the software.

TLANGS="zh-cn, en, ja, pt, es, ru, it, de, fr"

if [[ "$1" = '_DLG_' ]]; then
    fname="$(basename "$0")"
    name="<b>$(cut -f 1 -d '.' <<< "$fname")</b>"
    icon="gtk-apply"
    
    if [ -f "$DC_a/dict/msgs/$fname" ]; then
        info="\n<small>$(gettext "<b>Status:</b>") $(< "$DC_a/dict/msgs/$fname")</small>"
        icon="dialog-warning"
        
    elif grep -Fxq "$fname" "$DC_a/dict/ok_nolang.list" >/dev/null 2>&1; then
        info="\n<small>$(gettext "<b>Status:</b> Not enabled for the language you are learning.")</small>\n"
        icon="dialog-information"
    fi
    
    source "$DS/ifs/cmns.sh"
    msg "$name\n<small>$(gettext "Languages"): Various\n$(gettext "Does not need configuration")</small>\n$info" $icon "$4" "$(gettext "Close")"
    
    
else
    link="http://translate.googleapis.com/translate_a/single?client=gtx&sl=$2&tl=$3&dt=t&q=$1"
    gtra="$(wget -U "$useragent" -qO - "$link")"
    
     if grep -o -E 'ja|zh-cn|ru' <<< ${3} >/dev/null 2>&1 ; then
     
        if [[ "$4" = singleline ]]; then
        
            echo -e "${gtra}" |sed -e 's/\",\".*//g' |sed -e 's/.*\[\[\[\"//g'
        
        else
            while read t; do
                echo -n "$(grep -oP '(?<=trgt=\").*(?=\",\")' <<< "${t}")"
            done < <(echo "${gtra}" |sed 's/\[\[\[/trgt=/;s/\],\[/\ntrgt=/g')
        fi

    else
    
        if [[ "$4" = singleline ]]; then
        
            echo -e "${gtra}" |sed -e 's/\",\".*//g' |sed -e 's/.*\[\[\[\"//g'
        
        else
            while read t; do
                echo -n "$(grep -oP '(?<=trgt=\").*(?=\",\")' <<< "${t}")"
            done < <(echo "${gtra}" |sed 's/\[\[\[/trgt=/;s/\],\[/\ntrgt=/g')
        fi
    
    fi
fi
