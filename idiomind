#!/bin/bash
# -*- ENCODING: UTF-8 -*-

if [ ! -d "$HOME/.idiomind" ]; then
	/usr/share/idiomind/ifs/1u && exit
	if [ ! -d "$HOME/.idiomind" ]; then
		exit 1
	fi
fi

source /usr/share/idiomind/ifs/c.conf
source /usr/share/idiomind/ifs/trans/$lgs/items_lists.conf
if [ -z "$1" ]; then
	if [ -f $DT/.upt ]; then
		rm -f $DT/.upt
	fi
	
	# check if program is active 
	if [ -z "$(ps -A | pgrep -f "/usr/bin/idiomind panel")" ]; then
		# write in /tmp
		if [ ! -d $DT ]; then
			mkdir $DT
		fi
		if [ $? -ne 0 ]; then

			$yad --name=idiomind \
			--image=error --button=gtk-ok:1\
			--text=" <b>$write_err</b>" \
			--image-on-top --sticky  \
			--width=320 --height=80 \
			--borders=2 --title=Idiomind \
			--skip-taskbar --center \
			--window-icon=idiomind & exit 1
		fi
		
		#check if there directories
		if [ -f $DC_tl/.cnfg1 ]; then
			if [[ "$(cat $DC_tl/.cnfg1 | wc -l)" -lt 1 ]]; then
				touch "$DT/ntpc"
			fi
		fi
		
		idiomind panel &
		
		# init count for log (weekly report stats)
		echo "strt.1.strt" >> \
		$DC/addons/stats/.log &
		
		# ------------------------------------------------check session
		d1="$(date +%d)"
		[[ -f $DC_s/cnfg15 ]] && d2=$(cat $DC_s/cnfg15)
		
		# si las fechas no coinciden o no esta el archivo cnfg15 
		if [ "$d1" != "$d2" ] || [ ! -f $DC_s/cnfg15 ]; then
			echo "$(date +%d)" > $DC_s/cnfg15
			echo "--new session"

			# set size screen 
			xrandr | grep '*' | awk '{ print $1 }' > $DC_s/cnfg18
			sed -i 's/x/\n/' $DC_s/cnfg18
			y=$(sed -n 2p $DC_s/cnfg18)
			
			(
			if [ $y -gt 1200 ]; then
				#play posicion 
				echo 1000 > $DC_s/cnfg17
				#topic size 3 - 4 
				echo 450 >> $DC_s/cnfg18
				echo 520 >> $DC_s/cnfg18
				#trgt size 5 - 6 
				echo 500 >> $DC_s/cnfg18
				echo 320 >> $DC_s/cnfg18
				#edit size 7 - 8
				echo 260 >> $DC_s/cnfg18
				echo 190 >> $DC_s/cnfg18
				#play size  9 - 10 - 11
				echo 125 >> $DC_s/cnfg18
				echo 380 >> $DC_s/cnfg18
				#new la posicion  12 - 13
				echo 450 >> $DC_s/cnfg18
				echo 100 >> $DC_s/cnfg18
				#practice size 14 - 15
				echo 470 >> $DC_s/cnfg18
				echo 300 >> $DC_s/cnfg18
				exit
				
			elif [ $y -ge 1080 ]; then  # 1024
				#play posicion 
				echo 800 > $DC_s/cnfg17
				#topic size 3 - 4 
				echo 450 >> $DC_s/cnfg18 #FIXED! #w
				echo 520 >> $DC_s/cnfg18 #h
				#trgt size 5 - 6 
				echo 500 >> $DC_s/cnfg18
				echo 320 >> $DC_s/cnfg18
				#edit size 7 - 8
				echo 260 >> $DC_s/cnfg18
				echo 190 >> $DC_s/cnfg18
				#play size  9 - 10 - 
				echo 100 >> $DC_s/cnfg18
				echo 300 >> $DC_s/cnfg18
				#new la posicion  11 - 12
				echo 450 >> $DC_s/cnfg18
				echo 100 >> $DC_s/cnfg18
				#practice size 13 - 14
				echo 470 >> $DC_s/cnfg18
				echo 300 >> $DC_s/cnfg18
				exit
				
			elif [ $y -ge 1024 ]; then # 1024
				#play posicion  1 
				echo 800 > $DC_s/cnfg17
				#topic size 3 - 4 
				echo 430 >> $DC_s/cnfg18
				echo 490 >> $DC_s/cnfg18
				#trgt size 5 - 6 
				echo 490 >> $DC_s/cnfg18
				echo 320 >> $DC_s/cnfg18
				#edit size 7 - 8 
				echo 260 >> $DC_s/cnfg18
				echo 190 >> $DC_s/cnfg18
				#play size  6 - 10 - 11
				echo 100 >> $DC_s/cnfg18
				echo 320 >> $DC_s/cnfg18
				#new la posicion  12 - 13
				echo 450 >> $DC_s/cnfg18
				echo 100 >> $DC_s/cnfg18
				#practice size 14 - 15
				echo 470 >> $DC_s/cnfg18
				echo 300 >> $DC_s/cnfg18
				exit
				
			elif [ $y -gt 700 ]; then # 720
				#play posicion  1
				echo 520 > $DC_s/cnfg17
				#topic size 2 -3
				echo 420 >> $DC_s/cnfg18
				echo 480 >> $DC_s/cnfg18
				#trgt size 4 - 5 
				echo 470 >> $DC_s/cnfg18
				echo 320 >> $DC_s/cnfg18
				#edit size  6 - 7 
				echo 230 >> $DC_s/cnfg18
				echo 170 >> $DC_s/cnfg18
				#play size  8 - 9 
				echo 100 >> $DC_s/cnfg18
				echo 300 >> $DC_s/cnfg18
				#new posicion  10 - 11
				echo 200 >> $DC_s/cnfg18
				echo 50 >> $DC_s/cnfg18
				#practice size  12 - 13
				echo 460 >> $DC_s/cnfg18
				echo 250 >> $DC_s/cnfg18
				exit
				
			elif [ $y -gt 599 ]; then # 600
				#play position 
				echo 520 > $DC_s/cnfg17
				#topic size 
				echo 400 >> $DC_s/cnfg18
				echo 460 >> $DC_s/cnfg18
				#trgt size 
				echo 450 >> $DC_s/cnfg18
				echo 300 >> $DC_s/cnfg18
				#edit size 6 - 7
				echo 230 >> $DC_s/cnfg18
				echo 170 >> $DC_s/cnfg18
				#play size 
				echo 100 >> $DC_s/cnfg18
				echo 250 >> $DC_s/cnfg18
				#new posicion 
				echo 200 >> $DC_s/cnfg18
				echo 50 >> $DC_s/cnfg18
				#practice size 
				echo 460 >> $DC_s/cnfg18
				echo 250 >> $DC_s/cnfg18
				exit
				
			elif [ $y -gt 400 ]; then # 400
				# play position 
				echo 420 > $DC_s/cnfg17
				#topic size 
				echo 400 >> $DC_s/cnfg18
				echo 460 >> $DC_s/cnfg18
				#trgt size 
				echo 400 >> $DC_s/cnfg18
				echo 280 >> $DC_s/cnfg18
				#edit size 
				echo 500 >> $DC_s/cnfg18
				echo 320 >> $DC_s/cnfg18
				#play size 
				echo 500 >> $DC_s/cnfg18
				echo 320 >> $DC_s/cnfg18
				#new posicion 
				echo 50 >> $DC_s/cnfg18
				echo 200 >> $DC_s/cnfg18
				#practice size 
				echo 250 >> $DC_s/cnfg18
				echo 420 >> $DC_s/cnfg18
				exit
			fi
			)
			
			# set weekly report
			if ([ "$(date +%u)" = 7 ] && \
			[ "$(sed -n 1p $DC/addons/stats/cnf)" = "TRUE" ]); then
				$DS/addons/Stats/rprt A &
			fi
			
			# set feed update at starting
			if [ "$(sed -n 1p "$DC/addons/Learning with news/.cnf")" = "TRUE" ]; then
				(sleep 200
				$DS/addons/Learning_with_news/strt A
				) &
			fi
			
			# set baskup
			if ([ "$(date +%u)" = 6 ] && \
			[ "$(sed -n 1p $DC_s/cnfg12)" = "TRUE" ]); then
				$DS/ifs/t_bd.sh C &
			fi
			
			#search updates
			$DS/ifs/tls.sh srch &
			
			# update topics status
			[[ ! -f "$DC_tl/.cnfg1" ]] && touch "$DC_tl/.cnfg1"
			n=1
			while [ $n -le "$(cat "$DC_tl/.cnfg1" | head -30 | wc -l )" ]; do
				tp=$(sed -n "$n"p "$DC_tl/.cnfg1")
				
				if [ -f "$DC_tl/$tp/cnfg9" ]; then
					dte=$(cat "$DC_tl/$tp/cnfg9")
					dts=$(cat "$DC_tl/$tp/cnfg9" | wc -l)
					if [ $dts = 1 ]; then
						dte=$(sed -n 1p "$DC_tl/$tp/cnfg9")
						TM=$(echo $(( ( $(date +%s) - $(date -d "$dte" +%s) ) /(24 * 60 * 60 ) )))
						RM=$((100*$TM/10))
					elif [ $dts = 2 ]; then
						dte=$(sed -n 2p "$DC_tl/$tp/cnfg9")
						TM=$(echo $(( ( $(date +%s) - $(date -d "$dte" +%s) ) /(24 * 60 * 60 ) )))
						RM=$((100*$TM/15))
					elif [ $dts = 3 ]; then
						dte=$(sed -n 3p "$DC_tl/$tp/cnfg9")
						TM=$(echo $(( ( $(date +%s) - $(date -d "$dte" +%s) ) /(24 * 60 * 60 ) )))
						RM=$((100*$TM/30))
					elif [ $dts = 4 ]; then
						dte=$(sed -n 4p "$DC_tl/$tp/cnfg9")
						TM=$(echo $(( ( $(date +%s) - $(date -d "$dte" +%s) ) /(24 * 60 * 60 ) )))
						RM=$((100*$TM/60))
					fi
					nstll=$(grep -Fxo "$tp" "$DC_tl/.cnfg3")
					if [ -n "$nstll" ]; then
						if [ "$RM" -ge 100 ]; then
							echo "9" > "$DC_tl/$tp/cnfg8"
						fi
						if [ "$RM" -ge 150 ]; then
							echo "10" > "$DC_tl/$tp/cnfg8"
						fi
					else
						if [ "$RM" -ge 100 ]; then
							echo "4" > "$DC_tl/$tp/cnfg8"
						fi
						if [ "$RM" -ge 150 ]; then
							echo "5" > "$DC_tl/$tp/cnfg8"
						fi
					fi
				fi
				let n++
			done
			$DS/mngr.sh mkmn & exit 1
		fi
		
	else
		idiomind topic
	fi
fi

if [[ "$1" = "panel" ]]; then
	if [ -d $DM ]; then
		yad --geometry=185x318-120-420 --width=160 --name=idiomind\
			--height=220 --fixed --title=" Idiomind" --no-buttons \
			--icons --single-click --on-top --borders=0 \
			--read-dir=$DS/default/new --item-width=60 --skip-taskbar \
			--always-print-result --window-icon=idiomind --class=idiomind
			ret=$?
			if  [[ "$ret" -eq 0 ]]; then
				exit 1 & rm "$DC_tlt/lstntry"
			fi
	else
		$DS/ifs/1u
	fi

elif [[ $(echo "$1" | grep -o '.idmnd') = '.idmnd' ]]; then
	wth=$(sed -n 4p $DC_s/cnfg18)
	eht=$(sed -n 3p $DC_s/cnfg18)
	dte=$(date "+%d %B")
	c=$(echo $(($RANDOM%1000)))
	if [ ! -d $DT ]; then
		mkdir $DT
	fi
	mkdir $DT/idmimp_$c
	(cp -f $DS/default/p1.sh $DT/p1.$c
	cp -f $DS/default/p2.sh $DT/p2.$c
	sed -i 's/X015x/'$c'/g' $DT/*.$c) &
	cp "$1" $DT/import.tem
	cd $DT
	mv ./import.tem ./import.tar.gz
	cd ./idmimp_$c
	tar -xzvf ../import.tar.gz
	ls -t -d -N * > $DT/idmimp_$c/ls
	
	inme=$(sed -n 1p $DT/idmimp_$c/ls)
	echo "$inme"
	tmp="$DT/idmimp_$c/$inme"
	lgtli=$(sed -n 2p "$tmp/cnfg13")
	lng=$(sed -n 3p "$tmp/cnfg13")
	lgsli=$(sed -n 4p "$tmp/cnfg13")
	crea=$(sed -n 6p "$tmp/cnfg13")
	cc=$(sed -n 1p "$tmp/cnfg13")
	cgy=$(sed -n 9p "$tmp/cnfg13")
	nt=$(sed -n 11p "$tmp/cnfg13")

	ICON=idiomind
	
	if [ "$inme" != "$cc" ]; then
	int="$(sed -n 6p $DS/ifs/trans/$lgs/$lgs | sed 's/|/\n/g')"
		cstn=$($yad --name=idiomind \
		--image=error --button=gtk-ok:1\
		--text=" <b>$file_err</b>\\n" \
		--image-on-top  --sticky \
		--width=280 --height=120 \
		--title=Idiomind \
		--skip-taskbar --center \
		--window-icon=idiomind)
		rm -fr $DT/idmimp_$c $DT/*.$c \
		$DT/import.tar.gz
	else
		[[ $(echo "$inme" | wc -c) -gt 40 ]] && title="${inme:0:40}..." || title="$inme"
		cd "$tmp"
		ws=$(cat "cnfg3" | wc -l)
		ss=$(cat "cnfg4" | wc -l)
		if [[ -z "$nt" ]]; then
			itxt="<big><b>$title</b></big><small><small><b>\\n$lgsli  -  $lgtli \\n$category:  $cgy.\\ncreated_by:  $crea.\\n$ss  $sentences  -  $ws  $words</b></small></small><small>\n</small>"
		elif [[ ! -z "$nt" ]]; then
			[[ $(echo "$nt" | wc -c) -gt 200 ]] \
			&& nt="${nt:0:250}..." || nt="$nt"
			itxt="<big><b>$title</b></big><small><small><b>\\n$lgsli  -  $lgtli \\n$category:  $cgy.\\ncreated_by:  $crea.\\n$ss  $sentences  -  $ws  $words</b></small></small><small>\n\n$nt\n</small>"
		fi
		dlck="$DT/p1.$c"
		cat "$tmp/cnfg0" | awk '{print $0""}' | \
		$yad --list --name=Idiomind --title="Idiomind" \
		--ellipsize=END --print-all --image-on-top \
		--text="$itxt" --class=Idiomind  --scroll --no-headers \
		--width="$wth" --height="$eht" --image-on-top \
		--window-icon=idiomind --column=Items --center \
		--dclick-action="$dlck" --image=$ICON \
		--button="$install":0 --button="$close":1
			ret=$?
			
			if [ "$ret" -eq 1 ]; then
				rm -fr "$DT/idmimp_$c" $DT/*.$c \
				$DT/import.tar.gz & exit 1
			elif [ "$ret" -eq 0 ]; then
				if2=$(cat $DC/topics/$lgtli/.cnfg1 | wc -l)
				snm=$(cat $DC/topics/$lgtli/.cnfg1 | grep -Fo "$inme" | wc -l)
				
				if [ $if2 -ge 50 ]; then
					$yad  --name=idiomind --center \
					--image=info --class=idiomind \
					--text=" <b>$topics_max</b>\\n" \
					--image-on-top --sticky --skip-taskbar \
					--width=340 --height=120 \
					--title=Idiomind \
					--window-icon=idiomind \
					--button=gtk-ok:1
					rm -rf $DT/idmimp_$c $DT/*.$c \
					$DT/import.tar.gz & exit 1
				fi
		
				if [ "$snm" -ge 1 ]; then
					inm="$inme $snm"
					$yad  --name=idiomind \
					--image=info --sticky \
					--text=" $name_eq  \\n $name_eq2 <b>$inm</b>  \\n" \
					--class=idiomind --center --skip-taskbar \
					--image-on-top --width=340 --height=120 \
					--window-icon=idiomind \
					--title=Idiomind --button=Cancel:1 \
					--button=gtk-ok:0
						ret=$?
					if [ $ret != 0 ]; then
						rm -fr $DT/idmimp_$c $DT/*.$c \
						$DT/import.tar.gz & exit 1
					fi
				else
					inm="$inme"
				fi
				#installing
				if [ ! -d "$DM_t/$lgtli" ]; then
					mkdir "$DM_t/$lgtli"
					mkdir "$DM_t/$lgtli/.share"
					mkdir "$DC/topics/$lgtli"
					mkdir "$DC_a/Learning with news/$lgtli"
					mkdir "$DC_a/Learning with news/$lgtli/subscripts"
					"$DS/addons/Learning_with_news/examples/$lgtli"
					cp -f "$DS/addons/Learning_with_news/examples/$lgtli" \
					"$DC_a/Learning with news/$lgtli/subscripts/Example"
				fi
				mkdir "$DM/topics/$lgtli/$inm"
				mkdir "$DC/topics/$lgtli/$inm"
				drit="$DM/topics/$lgtli/$inm"
				dric="$DC/topics/$lgtli/$inm"
				mkdir "$dric/Practice"
				cp -f $DS/addons/Practice/default/.* \
				"$dric/Practice"
				cd "$tmp"
				cp -n ./.audio/*.mp3 "$DM_t/$lgtli/.share/"
				rm -fr ./.audio
				cp -fr ./.* "$drit/"
				cp -f cnfg13 "$dric/cnfg13"
				echo "6" > "$dric/cnfg8"
				cp -f cnfg0 "$dric/cnfg0"
				cp -f cnfg0 "$dric/cnfg1"
				cp -f cnfg3 "$dric/cnfg3"
				cp -f cnfg4 "$dric/cnfg4"
				cp -f cnfg5 "$dric/cnfg5"
				echo "$nt" > "$dric/nt"
				rm -r -f $DT/idmimp_$c $DT/*.$c
				cp -f $DS/default/tpc.sh "$dric/tpc.sh"
				chmod +x "$dric/tpc.sh"
				echo "$lng" > $DC_s/cnfg10
				echo "$lgtli" >> $DC_s/cnfg10
				cd "$dric"
				echo $dte > cnfg12
				echo "$inm" >> "$DC/topics/$lgtli/.cnfg3"
				sed -i 's/'"$inm"'//g' "$DC/topics/$lgtli/.cnfg2"
				sed '/^$/d' $DC/topics/$lgtli/.cnfg2 > $DC/topics/$lgtli/.cnfg2_
				mv -f $DC/topics/$lgtli/.cnfg2_ $DC/topics/$lgtli/.cnfg2
				$DS/mngr.sh mkmn &&
				"$dric/tpc.sh" &
				rm -r -f $DT/idmimp_$c $DT/*.$c \
				$DT/import.tar.gz & exit 1
			else
				rm -r -f $DT/idmimp_$c $DT/*.$c \
				$DT/import.tar.gz
			fi
		fi
	exit 1
fi

#--------------topic
if [ "$1" = topic ]; then
	
	eht=$(sed -n 3p $DC_s/cnfg18)
	wth=$(sed -n 4p $DC_s/cnfg18)
	mde=$(sed -n 2p $DC_s/cnfg8)
	title=$(sed -n 3p $DC_s/cnfg8)
	[[ ! -f "$DC_tlt/cnfg0" ]] && touch "$DC_tlt/cnfg0"
	[[ ! -f "$DC_tlt/cnfg1" ]] && touch "$DC_tlt/cnfg1"
	[[ ! -f "$DC_tlt/cnfg2" ]] && touch "$DC_tlt/cnfg2"
	ls0="$DC_tlt/cnfg0"
	ls1="$DC_tlt/cnfg1"
	ls2="$DC_tlt/cnfg2"
	nt="$DC_tlt/cnfg10"
	if [ $(echo "$tpc" | wc -c) -gt 50 ]; then
		ttl="${tpc:0:50}..."
	else
		ttl="$tpc"
	fi
	echo "tpcs.$tpc.tpcs" >> \
	$DC/addons/stats/.log &
	inx=$(cat "$ls0" | wc -l)
	tb1=$(cat "$ls1" | wc -l)
	tb2=$(cat "$ls2" | wc -l)

	#--------------topic own
	if echo "$mde" | grep "wn"; then
		[ -z "$tpc" ] && exit 1
		ICON=$DS/images/wn.png
		cd "$DC_tlt"
		ws=$(cat cnfg3 | wc -l)
		ss=$(cat cnfg4 | wc -l)
		itxt="\\n<big>  <b>$ttl</b> </big> <small><small><b>\\n    $ss $sentences     $ws $words</b></small></small>\\n"
		cd $DS
		c=$(echo $(($RANDOM%100000)))
		KEY=$c
		cnf1=$(mktemp $DT/cnf1.XXXX.x)
		cnf2=$(mktemp $DT/cnf2.XXXX.x)
		cnf3=$(mktemp $DT/cnf3.XXXX.x)
		
		# 1er vista - si el topic esta vacio 
		if [ "$inx" -lt 1 ]; then
			
			$yad --text-info --plug=$KEY --margins=14 \
			--wrap --editable --text="$itxt" \
			--tabnum=1 --fore=gray40 \
			--show-uri --fontname=vendana --print-column=1 \
			--column="" --filename="$nt" > "$cnf3" &
			$yad --notebook --name=idiomind --center \
			--class=idiomind --align=right --key=$KEY  \
			--tab-borders=0 --center --title="$tpc" \
			--tab="  $notes  " --window-icon=idiomind \
			--buttons-layout=edge --image-on-top --class=idiomind \
			--width="$wth" --height="$eht" --borders=0  \
			--button="$delete":"$DS/mngr.sh dlt" \
			--button="$close":2 --always-print-result
			ret=$?
					
				if [ $ret -eq 2 ]; then
					
					if [ -f "$cnf3" ]; then
						if [ "$cnf3" != "$nt" ]; then
							cat "$cnf3" > "$nt"
						fi
					fi
					rm -f "$cnf3" &
					
				else
					if [ -f "$cnf3" ]; then
						if [ "$cnf3" != "$nt" ]; then
							cat "$cnf3" > "$nt"
						fi
					fi
				rm -f $DT/*.x
				fi
			
		# 2er vista - si el topic tiene contenido para aprender
		elif [ "$tb1" -ge 1 ]; then
			if [ -f "$DC_tlt/cnfg9" ] && [ -f "$DC_tlt/cnfg7" ]; then
				dts=$(cat "$DC_tlt/cnfg9" | wc -l)
				if [ $dts = 1 ]; then
					dte=$(sed -n 1p "$DC_tlt/cnfg9")
					adv="<b>  10 $cuestion_review </b>"
					TM=$(echo $(( ( $(date +%s) - $(date -d "$dte" +%s) ) /(24 * 60 * 60 ) )))
					RM=$((100*$TM/10))
					tdays=10
				elif [ $dts = 2 ]; then
					dte=$(sed -n 2p "$DC_tlt/cnfg9")
					adv="<b>  15 $cuestion_review </b>"
					TM=$(echo $(( ( $(date +%s) - $(date -d "$dte" +%s) ) /(24 * 60 * 60 ) )))
					RM=$((100*$TM/15))
					tdays=15
				elif [ $dts = 3 ]; then
					dte=$(sed -n 3p "$DC_tlt/cnfg9")
					adv="<b>  30 $cuestion_review </b>"
					TM=$(echo $(( ( $(date +%s) - $(date -d "$dte" +%s) ) /(24 * 60 * 60 ) )))
					RM=$((100*$TM/30))
					tdays=30
				elif [ $dts = 4 ]; then
					dte=$(sed -n 4p "$DC_tlt/cnfg9")
					adv="<b>  60 $cuestion_review </b>"
					TM=$(echo $(( ( $(date +%s) - $(date -d "$dte" +%s) ) /(24 * 60 * 60 ) )))
					RM=$((100*$TM/60))
					tdays=60
				fi
				# si el topic aprendido tiene mas de 30 dias ( 100%) entonces pone su nombre en la lista de repasar borra de la lista "ok" , actualiza la lista de topic (mngr.sh mkmn ) y muestra el cuadro con la pregunta de reiniciar para repasar o no .
				if [ "$RM" -ge 100 ]; then
					echo "4" > "$DC_tlt/cnfg8"
					$DS/mngr.sh mkmn &
					RM=100
					$yad --title="$tpc" --window-icon=idiomind \
					--borders=20 --buttons-layout=edge --name=idiomind \
					--image=dialog-question \
					--on-top --window-icon=idiomind \
					--buttons-layout=edge --center --class=idiomind \
					--button="       $notyet       ":1 \
					--button="        $review        ":2 \
					--text="$adv" \
					--width=410 --height=150
					ret=$? # si se elige reiniciar entonces quita el nomre del topic de la lista " .ok" y la agrega a la lista ".ok_R" (lista repasando) copia la lista "$lso" ( indice total del topic) a la lista "$ls1" ( lista aprendiendo) por ultimo abre el topic
						if [ "$ret" -eq 2 ]; then
							echo "3" > "$DC_tlt/cnfg8"
							$DS/mngr.sh mkmn
							rm -f "$ls2" 
							rm -f "$DC_tlt/cnfg7"
							cp -f "$ls0" "$ls1" && idiomind topic & exit 1
						fi 
				fi
				
				$yad --align=center --borders=80 \
				--text="<u><b>$learned</b></u>   * $new_items ($tb1).\\n$time_review: $tdays" \
				--bar="":NORM $RM \
				--multi-progress --plug=$KEY --tabnum=1 &
				cat "$ls2" | awk '{print $0"\n"}' | $yad \
				--no-headers --list --plug=$KEY --tabnum=2 \
				--expand-column=1 --ellipsize=END --print-all \
				--column=Name:TEXT --column=Review:CHK \
				--dclick-action='./vwr.sh v2' > "$cnf2" &
				$yad --text-info --plug=$KEY --margins=14 \
				--wrap --editable --text="$itxt" \
				--tabnum=3 --fore='gray40' \
				--show-uri --fontname=vendana --print-column=1 \
				--column="" --filename="$nt" > "$cnf3" &
				$yad --notebook --name=Idiomind --center \
				--class=Idiomind --align=right --key=$KEY \
				--tab-borders=0 --center --title="$tpc" \
				--tab=" $review " --window-icon=idiomind \
				--tab=" $learned ($tb2) " --tab=" $notes " \
				--ellipsize=END --image-on-top  \
				--width="$wth" --height="$eht" \
				--borders=0 --always-print-result \
				--button="$review":4 --button="$edit":3 --button="$close":2
			else
				cat "$ls1" | awk '{print $0"\n"}' | $yad \
				--no-headers --list --plug=$KEY --tabnum=1 \
				--dclick-action='./vwr.sh v1'\
				--expand-column=1 --ellipsize=END --print-all \
				--column=Name:TEXT --column=Learned:CHK > "$cnf1" &
				cat "$ls2" | awk '{print $0"\n"}' | $yad \
				--no-headers --list --plug=$KEY --tabnum=2 \
				--expand-column=1 --ellipsize=END --print-all \
				--column=Name:TEXT --column=Review:CHK \
				--dclick-action='./vwr.sh v2' > "$cnf2" &
				$yad --text-info --plug=$KEY --margins=14 \
				--text="$itxt" \
				--tabnum=3 --fore='gray40' --wrap --editable \
				--show-uri --fontname=vendana --print-column=1 \
				--column="" --filename="$nt" > "$cnf3" &
				$yad --notebook --name=Idiomind --center --key=$KEY \
				--class=Idiomind --align=right --window-icon=idiomind \
				--tab-borders=0 --center --title="$tpc" \
				--tab="  $learning ($tb1) " \
				--tab="  $learned ($tb2) " --tab=" $notes " \
				--ellipsize=END --image-on-top \
				--width="$wth" --height="$eht" --borders=0 \
				--button="$practice":5 \
				--button="$edit":3 --button="$close":2 --always-print-result
			fi
				ret=$?
				
				if [ $ret -eq 3 ]; then
					./mngr.sh edit &
					
				elif [ $ret -eq 5 ]; then
					$DS/addons/Practice/strt &
					
				elif [ $ret -eq 4 ]; then
					$yad --title="$tpc" --window-icon=idiomind \
					--borders=5 --name=idiomind \
					--image=dialog-question \
					--on-top --window-icon=idiomind \
					--center --class=idiomind \
					--button="$onlynews":3 \
					--button="$all":2 \
					--text="  $cuestion_review2" \
					--width=360 --height=120
						ret=$? 
						if [ "$ret" -eq 2 ]; then
							rm -f "$DC_tlt/cnfg7"
							rm -f $DT/*.x
							echo "4" > "$DC_tlt/cnfg8"
							$DS/mngr.sh mkmn
							rm -f "$ls2"
							cp -f "$ls0" "$ls1" && idiomind topic & exit 1
							
						elif [ "$ret" -eq 3 ]; then
							rm -f $DT/*.x
							echo "3" > "$DC_tlt/cnfg8"
							rm -f "$DC_tlt/cnfg7" && idiomind topic & exit 1
						fi
					
				elif [ $ret -eq 2 ]; then
					if [ -f "$cnf3" ]; then
						if [ "$cnf3" != "$nt" ]; then
							cat "$cnf3" > "$nt"
						fi
					fi
					if [ -n "$(cat "$cnf1" | grep -o TRUE)" ]; then
						grep -Rl "|FALSE|" "$cnf1" | while read tab1 ; do
							 sed '/|FALSE|/d' "$cnf1" > tmpf1
							 mv tmpf1 $tab1
						done
						sed -i 's/|TRUE|//g' "$cnf1"
						cat "$cnf1" >> "$ls2"
						cnt=$(cat "$cnf1" | wc -l)
						grep -F -x -v -f "$cnf1" "$ls1" > $DT/ls1.x
						mv -f $DT/ls1.x "$ls1"
						# se ocupa de sacar lineas repetidas del indice 
						if [ -n "$(cat "$ls1" | sort -n | uniq -dc)" ]; then
							cat "$ls1" | awk '!array_temp[$0]++' > $DT/ls1.x
							sed '/^$/d' $DT/ls1.x > "$ls1"
						fi
						echo "okim.$cnt.okim" >> \
						$DC/addons/stats/.log &	
					fi
					if [ -n "$(cat "$cnf2" | grep -o TRUE)" ]; then
						grep -Rl "|FALSE|" "$cnf2" | while read tab2 ; do
							 sed '/|FALSE|/d' "$cnf2" > tmpf2
							 mv tmpf2 $tab2
						done
						sed -i 's/|TRUE|//g' "$cnf2"
						cat "$cnf2" >> "$ls1"
						cnt=$(cat "$cnf2" | wc -l)
						grep -F -x -v -f "$cnf2" "$ls2" > $DT/ls2.x
						mv -f $DT/ls2.x "$ls2"
						# se ocupa de sacar lineas repetidas del indice 
						if [ -n "$(cat "$ls2" | sort -n | uniq -dc)" ]; then
							cat "$ls2" | awk '!array_temp[$0]++' > $DT/ls2.x
							sed '/^$/d' $DT/ls2.x > "$ls2"
						fi
						echo "reim.$cnt.reim" >> \
						$DC/addons/stats/.log &
					fi
				else
					if [ -f "$cnf3" ]; then
						if [ "$cnf3" != "$nt" ]; then
							cat "$cnf3" > "$nt"
						fi
					fi
				rm -f $DT/*.x
				fi
			
		#  3er vista - si el topic esta aprendido 
		elif [ "$tb1" -eq 0 ]; then
			# actualiza la lista de topic para que se actualizen los $DS/imagesos 
			if [ ! -f "$DC_tlt/cnfg7" ]; then
				> "$DC_tlt/cnfg7"
				echo "$(date +%m/%d/%Y)" > "$DC_tlt/cnfg9"
				echo "2" > "$DC_tlt/cnfg8"
				$DS/mngr.sh mkmn &
			fi
			dts=$(cat "$DC_tlt/cnfg9" | wc -l)
			if [ $dts = 1 ]; then
				dte=$(sed -n 1p "$DC_tlt/cnfg9")
				adv="<b>  10 $cuestion_review </b>"
				TM=$(echo $(( ( $(date +%s) - $(date -d "$dte" +%s) ) /(24 * 60 * 60 ) )))
				RM=$((100*$TM/10))
				tdays=10
			elif [ $dts = 2 ]; then
				dte=$(sed -n 2p "$DC_tlt/cnfg9")
				adv="<b>  15 $cuestion_review </b>"
				TM=$(echo $(( ( $(date +%s) - $(date -d "$dte" +%s) ) /(24 * 60 * 60 ) )))
				RM=$((100*$TM/15))
				tdays=15
			elif [ $dts = 3 ]; then
				dte=$(sed -n 3p "$DC_tlt/cnfg9")
				adv="<b>  30 $cuestion_review </b>"
				TM=$(echo $(( ( $(date +%s) - $(date -d "$dte" +%s) ) /(24 * 60 * 60 ) )))
				RM=$((100*$TM/30))
				tdays=30
			elif [ $dts = 4 ]; then
				dte=$(sed -n 4p "$DC_tlt/cnfg9")
				adv="<b>  60 $cuestion_review </b>"
				TM=$(echo $(( ( $(date +%s) - $(date -d "$dte" +%s) ) /(24 * 60 * 60 ) )))
				RM=$((100*$TM/60))
				tdays=60
			fi
				
			if [ "$RM" -ge 100 ]; then
				echo "4" > "$DC_tlt/cnfg8"
				$DS/mngr.sh mkmn &
				RM=100
				$yad --title="$tpc" --window-icon=idiomind \
				--borders=20 --buttons-layout=edge --name=idiomind \
				--image=dialog-question --on-top \
				--buttons-layout=edge --center --class=idiomind \
				--button="       $notyet       ":1 \
				--button="        $review        ":2 \
				--text="$adv" \
				--width=410 --height=150
				ret=$? # si se elige reiniciar entonces quita el nomre del topic de la lista " .ok" y la agrega a la lista ".ok_R" (lista repasando) copia la lista "$lso" ( indice total del topic) a la lista "$ls1" ( lista aprendiendo) por ultimo abre el topic
					if [ "$ret" -eq 2 ]; then
						rm -f "$DC_tlt/cnfg7"
						rm -f $DT/*.x
						echo "3" > "$DC_tlt/cnfg8"
						$DS/mngr.sh mkmn
						rm -f "$ls2" 
						cp -f "$ls0" "$ls1" && idiomind topic & exit 1
					fi 
			fi

			$yad --align=center --borders=80 \
			--text="<u><b>$learned</b></u>\\n$time_review: $tdays" \
			--bar="":NORM $RM \
			--multi-progress --plug=$KEY --tabnum=1 &
			cat "$ls2" | awk '{print $0"\n"}' | $yad \
			--no-headers --list --plug=$KEY --tabnum=2 \
			--expand-column=1 --ellipsize=END --print-all \
			--column=Name:TEXT --column=Review:CHK \
			--dclick-action='./vwr.sh v2' > "$cnf2" &
			$yad --text-info --plug=$KEY --margins=14 \
			--wrap --editable --text="$itxt" \
			--tabnum=3 --fore='gray40' \
			--show-uri --fontname=vendana --print-column=1 \
			--column="" --filename="$nt" > "$cnf3" &
			$yad --notebook --name=Idiomind --center \
			--class=Idiomind --align=right --key=$KEY \
			--tab-borders=0 --center --title="$tpc" \
			--tab=" $review " --window-icon=idiomind \
			--tab=" $learned ($tb2) " --tab=" $notes " \
			--ellipsize=END --image-on-top  \
			--width="$wth" --height="$eht" --borders=0 \
			--button="$edit":3 --button="$close":2 --always-print-result
				ret=$?
				
				if [ $ret -eq 3 ]; then
					./mngr.sh edit &
					
				elif [ $ret -eq 5 ]; then
					$DS/addons/Practice/strt &
				
				elif [ $ret -eq 2 ]; then
					if [ -f "$cnf3" ]; then
						if [ "$cnf3" != "$nt" ]; then
							cat "$cnf3" > "$nt"
						fi
					fi
					if [ -n "$(cat "$cnf1" | grep -o TRUE)" ]; then
						grep -Rl "|FALSE|" "$cnf1" | while read tab1 ; do
							 sed '/|FALSE|/d' "$cnf1" > tmpf1
							 mv tmpf1 $tab1
						done
						sed -i 's/|TRUE|//g' "$cnf1"
						cat "$cnf1" >> "$ls2"
						cnt=$(cat "$cnf1" | wc -l)
						grep -F -x -v -f "$cnf1" "$ls1" > $DT/ls1.x
						mv -f $DT/ls1.x "$ls1"
						if [ -n "$(cat "$ls1" | sort -n | uniq -dc)" ]; then
							cat "$ls1" | awk '!array_temp[$0]++' > $DT/ls1.x
							sed '/^$/d' $DT/ls1.x > "$ls1" # se ocupa de sacar lineas repetidas del indice 
						fi
						echo "okim.$cnt.okim" >> \
						$DC/addons/stats/.log &
					fi
					if [ -n "$(cat "$cnf2" | grep -o TRUE)" ]; then
						grep -Rl "|FALSE|" "$cnf2" | while read tab2 ; do
							 sed '/|FALSE|/d' "$cnf2" > tmpf2
							 mv tmpf2 $tab2
						done
						sed -i 's/|TRUE|//g' "$cnf2"
						cat "$cnf2" >> "$ls1"
						cnt=$(cat "$cnf2" | wc -l)
						grep -F -x -v -f "$cnf2" "$ls2" > $DT/ls2.x
						mv -f $DT/ls2.x "$ls2"
						if [ -n "$(cat "$ls2" | sort -n | uniq -dc)" ]; then
							cat "$ls2" | awk '!array_temp[$0]++' > $DT/ls2.x
							sed '/^$/d' $DT/ls2.x > "$ls2" # se ocupa de sacar lineas repetidas del indice pricipal del topic
						fi
						echo "reim.$cnt.reim" >> \
						$DC/addons/stats/.log &
					fi
				else
					if [ -f "$cnf3" ]; then
						if [ "$cnf3" != "$nt" ]; then
							cat "$cnf3" > "$nt"
						fi
					fi
				rm -f $DT/*.x
				fi
			rm -f $DT/*.x
			fi
		
	##--------------topic nstll
	elif echo "$mde" | grep "istll"; then
		[ -z "$tpc" ] && exit 1
		l1=$(sed -n 6p "$DC_tlt/cnfg13")
		l2=$(sed -n 7p "$DC_tlt/cnfg13")
		l3=$(sed -n 8p "$DC_tlt/cnfg13")
		l4=$(sed -n 9p "$DC_tlt/cnfg13")
		ICON=$DS/images/wn.png
		cd "$DC_tlt"
		ws=$(cat cnfg3 | wc -l)
		ss=$(cat cnfg4 | wc -l)
		itxt="\\n<big>  <b>$ttl</b></big><small><small><b>\\n    $ss $sentences   $ws $words\\n    $category: $l4\\n    $created_by: $l1</b></small></small>\\n"
		cd $DS
		c=$(echo $(($RANDOM%100000)))
		KEY=$c
		cnf1=$(mktemp $DT/cnf1.XXXX.x)
		cnf2=$(mktemp $DT/cnf2.XXXX.x)
		cnf3=$(mktemp $DT/cnf3.XXXX.x)
		
		# 1er vista - topic con contenido para aprender
		if [ "$tb1" -ge 1 ]; then
		
			if [ -f "$DC_tlt/cnfg9" ] && [ -f "$DC_tlt/cnfg7" ]; then
				dts=$(cat "$DC_tlt/cnfg9" | wc -l)
				if [ $dts = 1 ]; then
					dte=$(sed -n 1p "$DC_tlt/cnfg9")
					adv="<b>   10 $cuestion_review </b>"
					TM=$(echo $(( ( $(date +%s) - $(date -d "$dte" +%s) ) /(24 * 60 * 60 ) )))
					RM=$((100*$TM/10))
					tdays=10
				elif [ $dts = 2 ]; then
					dte=$(sed -n 2p "$DC_tlt/cnfg9")
					adv="<b> 15 $cuestion_review </b>"
					TM=$(echo $(( ( $(date +%s) - $(date -d "$dte" +%s) ) /(24 * 60 * 60 ) )))
					RM=$((100*$TM/15))
					tdays=15
				elif [ $dts = 3 ]; then
					dte=$(sed -n 3p "$DC_tlt/cnfg9")
					adv="<b>  30 $cuestion_review </b>"
					TM=$(echo $(( ( $(date +%s) - $(date -d "$dte" +%s) ) /(24 * 60 * 60 ) )))
					RM=$((100*$TM/30))
					tdays=30
				elif [ $dts = 4 ]; then
					dte=$(sed -n 4p "$DC_tlt/cnfg9")
					adv="<b>  60 $cuestion_review </b>"
					TM=$(echo $(( ( $(date +%s) - $(date -d "$dte" +%s) ) /(24 * 60 * 60 ) )))
					RM=$((100*$TM/60))
					tdays=60
				fi
			 # si el topic aprendido tiene mas de 30 dias ( 100%) entonces pone su nombre en la lista de repasar borra de la lista "ok" , actualiza la lista de topic (mngr.sh mkmn ) y muestra el cuadro con la pregunta de reiniciar para repasar o no .
				if [ "$RM" -ge 100 ]; then
					echo "4" > "$DC_tlt/cnfg8"
					$DS/mngr.sh mkmn &
					RM=100
					$yad --title="$tpc" --window-icon=idiomind \
					--borders=20 --buttons-layout=edge --name=idiomind \
					--image=dialog-question --on-top \
					--buttons-layout=edge --center --class=idiomind \
					--button="       $notyet       ":1 \
					--button="        $review        ":2 \
					--text="$adv" \
					--width=410 --height=150
					ret=$? # si se elige reiniciar entonces quita el nomre del topic de la lista " .ok" y la agrega a la lista ".ok_R" (lista repasando) copia la lista "$lso" ( indice total del topic) a la lista "$ls1" ( lista aprendiendo) por ultimo abre el topic
						if [ "$ret" -eq 2 ]; then
							rm -f "$DC_tlt/cnfg7"
							rm -f $DT/*.x
							echo "3" > "$DC_tlt/cnfg8"
							$DS/mngr.sh mkmn
							rm -f "$ls2"
							cp -f "$ls0" "$ls1" && idiomind topic & exit 1
						fi 
					fi

				$yad --align=center --borders=80 \
				--text="<u><b>$learned</b></u>\\n   * $new_items ($tb1).\\n$time_review: $tdays" \
				--bar="":NORM $RM \
				--multi-progress --plug=$KEY --tabnum=1 &
				cat "$ls2" | awk '{print $0"\n"}' | $yad \
				--no-headers --list --plug=$KEY --tabnum=2 \
				--expand-column=1 --ellipsize=END --print-all \
				--column=Name:TEXT --column=Review:CHK \
				--dclick-action='./vwr.sh v2' > "$cnf2" &
				$yad --text-info --plug=$KEY --margins=14 \
				--wrap --editable --text="$itxt" \
				--tabnum=3 --fore='gray40' \
				--show-uri --fontname=vendana --print-column=1 \
				--column="" --filename="$nt" > "$cnf3" &
				$yad --notebook --name=Idiomind --center \
				--class=Idiomind --align=right --key=$KEY \
				--tab-borders=0 --center --title="$tpc" \
				--tab=" $review " --window-icon=idiomind \
				--tab=" $learned ($tb2) " --tab=" $notes " \
				--ellipsize=END --image-on-top  \
				--width="$wth" --height="$eht" \
				--borders=0 --always-print-result \
				--button="$review":4 --button="$edit":3 --button="$close":2 
			else
				cat "$ls1" | awk '{print $0"\n"}' | $yad \
				--no-headers --list --plug=$KEY --tabnum=1 $t \
				--expand-column=1 --ellipsize=END --print-all \
				--column=Name:TEXT --column=Learned:CHK \
				--dclick-action='./vwr.sh v1' > "$cnf1" &
				cat "$ls2" | awk '{print $0"\n"}' | $yad \
				--no-headers --list --plug=$KEY --tabnum=2 \
				--expand-column=1 --ellipsize=END --print-all \
				--column=Name:TEXT --column=Review:CHK \
				--dclick-action='./vwr.sh v2' > "$cnf2" &
				$yad --text-info --plug=$KEY --margins=14 \
				--editable --wrap --text="$itxt" \
				--tabnum=3 --fore='gray40' --column="" --filename="$nt" \
				--show-uri --fontname=vendana --print-column=1 > "$cnf3" &
				$yad --notebook --name=Idiomind --center  \
				--class=Idiomind --align=right --key=$KEY \
				--tab-borders=0 --center --title="$tpc" \
				--tab=" $learning ($tb1) " \
				--tab=" $learned ($tb2) " --tab=" $notes " \
				--ellipsize=END --image-on-top --window-icon=idiomind \
				--width="$wth" --height="$eht" --borders=0 \
				--button="$practice":5 \
				--button="$edit":3 --button="$close":2 --always-print-result
			fi
				ret=$?
				
				if [ $ret -eq 3 ]; then
					./mngr.sh edit &
				
				elif [ $ret -eq 5 ]; then
					rm -f $DT/*.x
					$DS/addons/Practice/strt &
					
				elif [ $ret -eq 4 ]; then
					$yad --title="$tpc" --window-icon=idiomind \
					--borders=20 --name=idiomind \
					--image=dialog-question \
					--on-top --window-icon=idiomind \
					--center --class=idiomind \
					--button="$onlynews":3 \
					--button="$all":2 \
					--text="  $cuestion_review2 " \
					--width=360 --height=120
						ret=$? 
						if [ "$ret" -eq 2 ]; then
							rm -f "$DC_tlt/cnfg7"
							rm -f $DT/*.x
							echo "9" > "$DC_tlt/cnfg8"
							$DS/mngr.sh mkmn
							rm -f "$ls2"
							cp -f "$ls0" "$ls1" && idiomind topic & exit 1
							
						elif [ "$ret" -eq 3 ]; then
							rm -f $DT/*.x
							echo "8" > "$DC_tlt/cnfg8"
							rm -f "$DC_tlt/cnfg7" && idiomind topic & exit 1
						fi
				
				elif [ $ret -eq 2 ]; then
					if [ -f "$cnf3" ]; then
						if [ "$cnf3" != "$nt" ]; then
							cat "$cnf3" > "$nt"
						fi
					fi
					if [ -n "$(cat "$cnf1" | grep -o TRUE)" ]; then
						grep -Rl "|FALSE|" "$cnf1" | while read tab1 ; do
							 sed '/|FALSE|/d' "$cnf1" > tmpf1
							 mv tmpf1 $tab1
						done
						sed -i 's/|TRUE|//g' "$cnf1"
						cat "$cnf1" >> "$ls2"
						cnt=$(cat "$cnf1" | wc -l)
						grep -F -x -v -f "$cnf1" "$ls1" > $DT/ls1.x
						mv -f $DT/ls1.x "$ls1"
						if [ -n "$(cat "$ls1" | sort -n | uniq -dc)" ]; then
							cat "$ls1" | awk '!array_temp[$0]++' > $DT/ls1.x
							sed '/^$/d' $DT/ls1.x > "$ls1"
						fi
						echo "okim.$cnt.okim" >> \
						$DC/addons/stats/.log &
					fi
					
					if [ -n "$(cat "$cnf2" | grep -o TRUE)" ]; then
						grep -Rl "|FALSE|" "$cnf2" | while read tab2 ; do
							 sed '/|FALSE|/d' "$cnf2" > tmpf2
							 mv tmpf2 $tab2
						done
						sed -i 's/|TRUE|//g' "$cnf2"
						cat "$cnf2" >> "$ls1"
						cnt=$(cat "$cnf2" | wc -l)
						grep -F -x -v -f "$cnf2" "$ls2" > $DT/ls2.x
						mv -f $DT/ls2.x "$ls2"
						# se ocupa de sacar lineas repetidas del indice pricipal del topic
						if [ -n "$(cat "$ls2" | sort -n | uniq -dc)" ]; then
							cat "$ls2" | awk '!array_temp[$0]++' > $DT/ls2.x
							sed '/^$/d' $DT/ls2.x > "$ls2"
						fi
						echo "reim.$cnt.reim" >> \
						$DC/addons/stats/.log &
					fi
				else
					if [ -f "$cnf3" ]; then
						if [ "$cnf3" != "$nt" ]; then
							cat "$cnf3" > "$nt"
						fi
					fi
				rm -f $DT/*.x
				fi
		
		# 3er vista - si el topic esta aprendido
		elif [ "$tb1" -eq 0 ]; then
			if [ ! -f "$DC_tlt/cnfg7" ]; then
				> "$DC_tlt/cnfg7"
				echo "$(date +%m/%d/%Y)" > "$DC_tlt/cnfg9"
				echo "7" > "$DC_tlt/cnfg8"
				$DS/mngr.sh mkmn &
			fi
			dts=$(cat "$DC_tlt/cnfg9" | wc -l)
			if [ $dts = 1 ]; then
				dte=$(sed -n 1p "$DC_tlt/cnfg9")
				adv="<b>  10 $cuestion_review </b>"
				TM=$(echo $(( ( $(date +%s) - $(date -d "$dte" +%s) ) /(24 * 60 * 60 ) )))
				RM=$((100*$TM/10))
				tdays=10
			elif [ $dts = 2 ]; then
				dte=$(sed -n 2p "$DC_tlt/cnfg9")
				adv="<b>  15 $cuestion_review </b>"
				TM=$(echo $(( ( $(date +%s) - $(date -d "$dte" +%s) ) /(24 * 60 * 60 ) )))
				RM=$((100*$TM/15))
				tdays=15
			elif [ $dts = 3 ]; then
				dte=$(sed -n 3p "$DC_tlt/cnfg9")
				adv="<b>  30 $cuestion_review </b>"
				TM=$(echo $(( ( $(date +%s) - $(date -d "$dte" +%s) ) /(24 * 60 * 60 ) )))
				RM=$((100*$TM/30))
				tdays=30
			elif [ $dts = 4 ]; then
				dte=$(sed -n 4p "$DC_tlt/cnfg9")
				adv="<b>  60 $cuestion_review </b>"
				TM=$(echo $(( ( $(date +%s) - $(date -d "$dte" +%s) ) /(24 * 60 * 60 ) )))
				RM=$((100*$TM/60))
				tdays=60
			fi
			
			if [ "$RM" -ge 100 ]; then
				echo "9" > "$DC_tlt/cnfg8"
				$DS/mngr.sh mkmn &
				RM=100
				
				$yad --title="$tpc" \
				--borders=20 --buttons-layout=edge --class=idiomind \
				--image=dialog-question --window-icon=idiomind \
				--on-top --window-icon=idiomind \
				--buttons-layout=edge --center --name=idiomind \
				--button="       $notyet       ":1 \
				--button="        $review        ":2 \
				--text="$adv" \
				--width=410 --height=150
					ret=$?
					
					if [ "$ret" -eq 2 ]; then
						echo "8" > "$DC_tlt/cnfg8"
						rm -f "$DC_tlt/cnfg7"
						rm -f $DT/*.x
						$DS/mngr.sh mkmn &
						rm -f "$ls2"
						cp -f "$ls0" "$ls1" && idiomind topic & exit 1
					fi
			fi
			
			$yad --align=center --borders=80 \
			--text="<u><b>$learned</b></u>\\n$time_review: $tdays" \
			--bar="":NORM $RM \
			--multi-progress --plug=$KEY --tabnum=1 &
			cat "$ls2" | awk '{print $0"\n"}' | $yad \
			--no-headers --list --plug=$KEY --tabnum=2 \
			--expand-column=1 --ellipsize=END --print-all \
			--column=Name:TEXT --column=Review:CHK \
			--dclick-action='./vwr.sh v2' > "$cnf2" &
			$yad --text-info --plug=$KEY --margins=14 \
			--editable --wrap --text="$itxt" \
			--tabnum=3 --fore='gray40' --column="" --filename="$nt" \
			--show-uri --fontname=vendana --print-column=1 > "$cnf3" &
			$yad --notebook --name=Idiomind --center  \
			--class=Idiomind --align=right --key=$KEY \
			--tab-borders=0 --center --title="$tpc" \
			--tab=" $review " --window-icon=idiomind \
			--tab=" $learned ($tb2) " --tab=" $notes " \
			--ellipsize=END --image-on-top \
			--width="$wth" --height="$eht" --borders=0 \
			--button="$edit":3 --button="$close":2 --always-print-result
				ret=$?
				
				if [ $ret -eq 3 ]; then
					./mngr.sh edit &
				
				elif [ $ret -eq 5 ]; then
					rm -f $DT/*.x
					$DS/addons/Practice/strt &
				
				elif [ $ret -eq 2 ]; then
					if [ -f "$cnf3" ]; then
						if [ "$cnf3" != "$nt" ]; then
							cat "$cnf3" > "$nt"
						fi
					fi
					if [ -n "$(cat "$cnf1" | grep -o TRUE)" ]; then
						grep -Rl "|FALSE|" "$cnf1" | while read tab1 ; do
							 sed '/|FALSE|/d' "$cnf1" > tmpf1
							 mv tmpf1 $tab1
						done
						sed -i 's/|TRUE|//g' "$cnf1"
						cat "$cnf1" >> "$ls2"
						cnt=$(cat "$cnf1" | wc -l)
						grep -F -x -v -f "$cnf1" "$ls1" > $DT/ls1.x
						mv -f $DT/ls1.x "$ls1"
						if [ -n "$(cat "$ls1" | sort -n | uniq -dc)" ]; then
							cat "$ls1" | awk '!array_temp[$0]++' > $DT/ls1.x
							sed '/^$/d' $DT/ls1.x > "$ls1"
						fi
					fi
					if [ -n "$(cat "$cnf2" | grep -o TRUE)" ]; then
						grep -Rl "|FALSE|" "$cnf2" | while read tab2 ; do
							 sed '/|FALSE|/d' "$cnf2" > tmpf2
							 mv tmpf2 $tab2
						done
						sed -i 's/|TRUE|//g' "$cnf2"
						cat "$cnf2" >> "$ls1"
						cnt=$(cat "$cnf2" | wc -l)
						grep -F -x -v -f "$cnf2" "$ls2" > $DT/ls2.x
						mv -f $DT/ls2.x "$ls2"
						# se ocupa de sacar lineas repetidas del indice pricipal del topic
						if [ -n "$(cat "$ls2" | sort -n | uniq -dc)" ]; then
							cat "$ls2" | awk '!array_temp[$0]++' > $DT/ls2.x
							sed '/^$/d' $DT/ls2.x > "$ls2"
						fi
						echo "reim.$cnt.reim" >> \
						$DC/addons/stats/.log &
					fi
				else
					if [ -f "$cnf3" ]; then
						if [ "$cnf3" != "$nt" ]; then
							cat "$cnf3" > "$nt"
						fi
					fi
				rm -f $DT/*.x
				fi
			rm -f $DT/*.x & exit 1
			fi
	
	#--------------feeds
	elif echo "$mde" | grep "fd"; then
		dir1="$DM_tl/Feeds"
		dir2="$DC/addons/Learning with news"
		DF="$DS/addons/Learning_with_news"
		FEED=$(cat "$dir2/$lgtl/.rss")
		ICON=$DF/img/icon.png
		c=$(echo $(($RANDOM%100000)))
		STT="$(cat $DT/.uptf)"
		
		KEY=$c
		if echo "$STT" | grep "Actualizando"; then
			info=$(echo "<i>"$updating"...</i>")
			FEED=$(cat "$DT/.rss")
		else
			info=$(cat $DC_tl/Feeds/.dt)
		fi
		
		cd "$dir1/conten"
		ls -t *.mp3 > "$DC_tl/Feeds/.lst"
		(sed -i 's/.mp3//g' "$DC_tl/Feeds/.lst")
		
		cd $DF
		cat "$DC_tl/Feeds/.lst" | $yad \
		--no-headers --list --listen --plug=$KEY --tabnum=1 \
		--text=" <small>$info</small>" \
		--expand-column=1 --ellipsize=END --print-all \
		--column=Name:TEXT --dclick-action='./vwr.sh V1' &
		cat "$DC_tl/Feeds/cnfg0" | awk '{print $0""}' \
		| $yad --no-headers --list --listen --plug=$KEY --tabnum=2 \
		--expand-column=1 --ellipsize=END --print-all \
		--column=Name:TEXT --dclick-action='./vwr.sh V2' &
		$yad --notebook --name=Idiomind --center \
		--class=Idiomind --align=right --key=$KEY \
		--text=" <big><b>Feeds </b></big>\\n <small>$FEED \\n</small>" \
		--image=$ICON --image-on-top  \
		--tab-borders=0 --center --title="$FEED" \
		--tab="  $news  " --tab="   $saved_conten   " \
		--ellipsize=END --image-on-top --window-icon=idiomind \
		--width="$wth" --height="$eht" --borders=0 \
		--button="$update":2 \
		--button="$edit":3 \
		--button="$close":1
			ret=$?
			
			if [ $ret -eq 0 ]; then
				rm -f $DT/*.x
				$DF/cnf & killall topic.sh & exit 1
			
			elif [ $ret -eq 3 ]; then
				rm -f $DT/*.x
				$DF/cnf edit & exit 1
			
			elif [ $ret -eq 2 ]; then
				rm -f $DT/*.x
				$DF/strt & exit 1
			else
				rm -f $DT/*.x
				exit 1
			fi
			
	elif echo "$mde" | grep "wr"; then
		$DS/addons/Stats/rprt T & exit 1
	fi
	rm -f $DT/*.x
fi
